<python text="from .pretty_print import add_pp, pp_goal, pp_goals">

type error = {
    code: int;
    message: string;
}

type failure = {
    id: int;
    error: error;
}

type response = {
    ~jsonrpc <python default="'2.0'">: string;
    id: int;
    result: abstract;
}

type request = {
    ~jsonrpc <python default="'2.0'">: string;
    id: int;
    method_ <json name="method">: string;
    params: abstract
}

type init_params = {
    ~debug <python default="False">: bool;
    root: string;
}

type start_params = {
    uri: string;
    thm: string;
}

type run_params = {
    st: int;
    tac: string;
}

type run_response = [ Current_state of int | Proof_finished of int ]

type goals_params = {
    st: int;
}

type goal_hyp = {
    names: string list;
    ?def_ <json name="def">: abstract option;
    ty: string;
}

type goal <python decorator="add_pp(pp_goal)"> = {
    info: abstract;
    hyps: goal_hyp list;
    ty: string;
}

type goals_response <python decorator="add_pp(pp_goals)"> = {
    goals : goal list;
}

type premises_params = {
    st: int;
}

type premises_response = abstract